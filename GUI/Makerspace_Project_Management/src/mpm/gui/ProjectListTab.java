/*
 * Makerspace Project Management
 * Database Systems 2016-2017
 * Copyright 2016 (C) Grabocka Mikel, Nardini Matteo, Scolati Remo.
 * All rights reserved.
 */
package mpm.gui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mpm.data.dao.DAOs;
import mpm.data.entities.Project;
import mpm.data.entities.ProjectRole;
import mpm.data.entities.ProjectStatus;
import mpm.data.logic.IDHider;
import mpm.main.MPM;

/**
 *
 * @author Shalen
 */
public class ProjectListTab extends javax.swing.JPanel {

    public ProjectListTab(boolean isUserStaff) {
        initComponents();
        
        pnlChoosVisualizationMode.setVisible(isUserStaff);
        
        projectTable.setAutoCreateRowSorter(true);
        reloadProjectTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgShowMode = new javax.swing.ButtonGroup();
        projectTableScrollPane = new javax.swing.JScrollPane();
        projectTable = new javax.swing.JTable();
        openSelectedButton = new javax.swing.JButton();
        pnlChoosVisualizationMode = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rdbAllProjects = new javax.swing.JRadioButton();
        rdbOnlyMyProjects = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        txtProjectName = new javax.swing.JTextField();
        chbCollaboration = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        taProjectDescription = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        defaultStatusLabel = new javax.swing.JLabel();

        projectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Description", "Status", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        projectTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        projectTableScrollPane.setViewportView(projectTable);

        openSelectedButton.setText("Open Selected");
        openSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSelectedButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Show:");

        bgShowMode.add(rdbAllProjects);
        rdbAllProjects.setText("All the projects");
        rdbAllProjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbModeChange(evt);
            }
        });

        bgShowMode.add(rdbOnlyMyProjects);
        rdbOnlyMyProjects.setSelected(true);
        rdbOnlyMyProjects.setText("Only my projects");
        rdbOnlyMyProjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbModeChange(evt);
            }
        });

        javax.swing.GroupLayout pnlChoosVisualizationModeLayout = new javax.swing.GroupLayout(pnlChoosVisualizationMode);
        pnlChoosVisualizationMode.setLayout(pnlChoosVisualizationModeLayout);
        pnlChoosVisualizationModeLayout.setHorizontalGroup(
            pnlChoosVisualizationModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChoosVisualizationModeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(rdbOnlyMyProjects)
                .addGap(10, 10, 10)
                .addComponent(rdbAllProjects))
        );
        pnlChoosVisualizationModeLayout.setVerticalGroup(
            pnlChoosVisualizationModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChoosVisualizationModeLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlChoosVisualizationModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rdbOnlyMyProjects)
                    .addComponent(rdbAllProjects))
                .addGap(0, 0, 0))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Create new project:"));

        jLabel2.setText("Description:");

        createButton.setText("Create Project");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        txtProjectName.setMinimumSize(new java.awt.Dimension(0, 0));

        chbCollaboration.setText("Open for Collaboration");

        taProjectDescription.setColumns(20);
        taProjectDescription.setLineWrap(true);
        taProjectDescription.setRows(5);
        taProjectDescription.setWrapStyleWord(true);
        taProjectDescription.setMinimumSize(new java.awt.Dimension(0, 0));
        jScrollPane1.setViewportView(taProjectDescription);

        jLabel1.setText("Title:");

        defaultStatusLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        defaultStatusLabel.setText("Default Status: Proposed");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProjectName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(defaultStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chbCollaboration))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(chbCollaboration)
                        .addGap(24, 24, 24)
                        .addComponent(defaultStatusLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(projectTableScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlChoosVisualizationMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(openSelectedButton))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(projectTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlChoosVisualizationMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(openSelectedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        if (txtProjectName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Insert a project name", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Project p = new Project(DAOs.projects.getNextValidId());
        p.setTitle(txtProjectName.getText());
        p.setDescription(taProjectDescription.getText());
        p.setSeekingCollaboration(chbCollaboration.isSelected());
        
        // By default new projects are proposed: they have to be set as active
        // by a Makerspace technician.
        p.setStatus(ProjectStatus.PROPOSED);

        try
        {
            DAOs.projects.createNewProjectWithAdmin(p, MPM.currentUser);
        }catch(RuntimeException ex){
            JOptionPane.showMessageDialog(this, "Oops, something went wrong. \n " + ex.getMessage(), 
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        JOptionPane.showMessageDialog(this, "Operation successful!");
        txtProjectName.setText("");
        taProjectDescription.setText("");
        chbCollaboration.setSelected(false);
        reloadProjectTable();
    }//GEN-LAST:event_createButtonActionPerformed

    private void openSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSelectedButtonActionPerformed
        int row = projectTable.getSelectedRow();

        if(row == -1){
            JOptionPane.showMessageDialog(this, "Select a project to open", 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            int projectID = (((IDHider<Project>) projectTable.getModel().getValueAt(row, 0)).getHidden()).getId();
            
            MPM.currentProject = DAOs.projects.findByID(projectID);
            MPM.setPanel(new ProjectPanel(isUserInGodMode()));
        }
    }//GEN-LAST:event_openSelectedButtonActionPerformed

    private void rdbModeChange(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbModeChange
        reloadProjectTable();
    }//GEN-LAST:event_rdbModeChange

    public final void reloadProjectTable()
    {
        List<Project> list;
        
        if (isUserInGodMode())
        {
            list = DAOs.projects.getAll();
        }else{
            list = DAOs.projects.getUserProjects(MPM.currentUser);
        }
        
        DefaultTableModel m = (DefaultTableModel) projectTable.getModel();
        m.setRowCount(0);
        
        list.forEach(p -> {      
            Object[] o = new Object[4];
            o[0] = new IDHider(p, p.getTitle());
            o[1] = p.getDescription();
            o[2] = p.getStatus();
            
            List<ProjectRole> l = DAOs.participations.getUserRolesInProject(
                    MPM.currentUser.getId(), p.getId());
            
            if (l.isEmpty())
            {
                // In this case, we are in "admin mode"
                // This means that also project in which this user does not
                // participate are shown
                o[3] = "Not participating";
            }else{
                o[3] = l.get(0).toString(); 
            }
            
            m.addRow(o);
        });
    }

    private boolean isUserInGodMode()
    {
        return pnlChoosVisualizationMode.isVisible() && 
                rdbAllProjects.isSelected();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgShowMode;
    private javax.swing.JCheckBox chbCollaboration;
    private javax.swing.JButton createButton;
    private javax.swing.JLabel defaultStatusLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton openSelectedButton;
    private javax.swing.JPanel pnlChoosVisualizationMode;
    private javax.swing.JTable projectTable;
    private javax.swing.JScrollPane projectTableScrollPane;
    private javax.swing.JRadioButton rdbAllProjects;
    private javax.swing.JRadioButton rdbOnlyMyProjects;
    private javax.swing.JTextArea taProjectDescription;
    private javax.swing.JTextField txtProjectName;
    // End of variables declaration//GEN-END:variables
}
