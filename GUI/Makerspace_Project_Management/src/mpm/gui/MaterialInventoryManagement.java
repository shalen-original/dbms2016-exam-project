/*
 * Makerspace Project Management
 * Database Systems 2016-2017
 * Copyright 2016 (C) Grabocka Mikel, Nardini Matteo, Scolati Remo.
 * All rights reserved.
 */
package mpm.gui;

import java.math.BigDecimal;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import mpm.data.dao.DAOs;
import mpm.data.entities.Material;
import mpm.data.logic.IDHider;

/**
 *
 * @author Shalen
 */
public class MaterialInventoryManagement extends javax.swing.JPanel {

    private Material selectedMaterial;
    
    /**
     * Creates new form MaterialInventoryManagement
     */
    public MaterialInventoryManagement() {
        initComponents();
        
        tbInventory.getSelectionModel().addListSelectionListener(e -> {
            materialSelectionChanged();
        });
        
        reloadMaterialInventoryTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbInventory = new javax.swing.JTable();
        pnlEditAdd = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taDescription = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        txtUnitaryPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtUnitsOfMeasure = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sUnitsAvailable = new javax.swing.JSpinner();
        btnSaveChanges = new javax.swing.JButton();
        btnAddNewMaterial = new javax.swing.JButton();

        jLabel3.setText("Current inventory:");

        tbInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Unitary price", "Units of measure", "Units available", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbInventory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tbInventory);

        pnlEditAdd.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit selected:"));

        jLabel4.setText("Name:");

        jLabel7.setText("Description:");

        taDescription.setColumns(20);
        taDescription.setRows(5);
        jScrollPane3.setViewportView(taDescription);

        jLabel8.setText("Unitary price:");

        jLabel5.setText("Units of measure:");

        jLabel6.setText("Units available:");

        sUnitsAvailable.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout pnlEditAddLayout = new javax.swing.GroupLayout(pnlEditAdd);
        pnlEditAdd.setLayout(pnlEditAddLayout);
        pnlEditAddLayout.setHorizontalGroup(
            pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(pnlEditAddLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlEditAddLayout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                            .addComponent(txtUnitaryPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlEditAddLayout.createSequentialGroup()
                        .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditAddLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(pnlEditAddLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(16, 16, 16)))
                        .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sUnitsAvailable)
                            .addComponent(txtUnitsOfMeasure, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditAddLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlEditAddLayout.setVerticalGroup(
            pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditAddLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlEditAddLayout.createSequentialGroup()
                        .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUnitaryPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtUnitsOfMeasure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(10, 10, 10)
                        .addGroup(pnlEditAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(sUnitsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        btnSaveChanges.setText("Save changes");
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });

        btnAddNewMaterial.setText("Add new material");
        btnAddNewMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewMaterialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEditAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSaveChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddNewMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEditAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNewMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed

        if (btnSaveChanges.getText().endsWith("Save changes"))
        {
            if (selectedMaterial == null)
            {
                JOptionPane.showMessageDialog(this, "Select a material", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if (!areAllFieldsValid())
                return;
            
            selectedMaterial.setName(txtName.getText());
            selectedMaterial.setDescription(taDescription.getText());
            selectedMaterial.setUnitsOfMeasure(txtUnitsOfMeasure.getText());
            selectedMaterial.setUnitsAvailable((int)sUnitsAvailable.getValue());
            selectedMaterial.setUnitaryPrice(BigDecimal.valueOf(Double.parseDouble(txtUnitaryPrice.getText())));

            try
            {
                DAOs.materials.update(selectedMaterial);
                reloadMaterialInventoryTable();
                tbInventory.getSelectionModel().setSelectionInterval(0, 0);
            }catch(RuntimeException ex){
                JOptionPane.showMessageDialog(this, "Oops, something went wrong. \n " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            JOptionPane.showMessageDialog(this, "Operation successful!");

            return;
        }

        if (btnSaveChanges.getText().endsWith("Abort material creation"))
        {
            ((TitledBorder) pnlEditAdd.getBorder()).setTitle("Edit selected:");
            pnlEditAdd.repaint();
            tbInventory.getSelectionModel().setSelectionInterval(0, 0);
            btnAddNewMaterial.setText("Add new material");
            btnSaveChanges.setText("Save changes");
        }

    }//GEN-LAST:event_btnSaveChangesActionPerformed

    private void btnAddNewMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewMaterialActionPerformed

        if (btnAddNewMaterial.getText().equals("Add new material"))
        {
            ((TitledBorder) pnlEditAdd.getBorder()).setTitle("New material:");
            pnlEditAdd.repaint();
            tbInventory.getSelectionModel().clearSelection();
            btnAddNewMaterial.setText("Save new material");
            btnSaveChanges.setText("Abort material creation");

            return;
        }

        if (btnAddNewMaterial.getText().equals("Save new material"))
        {
            if (!areAllFieldsValid())
                return;
            
            Material m = new Material(DAOs.materials.getNextValidId());
            m.setName(txtName.getText());
            m.setDescription(taDescription.getText());
            m.setUnitsOfMeasure(txtUnitsOfMeasure.getText());
            m.setUnitsAvailable((int)sUnitsAvailable.getValue());
            m.setUnitaryPrice(BigDecimal.valueOf(Double.parseDouble(txtUnitaryPrice.getText())));

            try
            {
                DAOs.materials.insert(m);
                reloadMaterialInventoryTable();
                tbInventory.getSelectionModel().setSelectionInterval(0, 0);

                btnAddNewMaterial.setText("Add new material");
                btnSaveChanges.setText("Save changes");
                ((TitledBorder) pnlEditAdd.getBorder()).setTitle("Edit selected:");
            }catch(RuntimeException ex){
                JOptionPane.showMessageDialog(this, "Oops, something went wrong. \n " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            JOptionPane.showMessageDialog(this, "Operation successful!");

        }

    }//GEN-LAST:event_btnAddNewMaterialActionPerformed

    private void reloadMaterialInventoryTable()
    {
        List<Material> l = DAOs.materials.getAll();
        
        DefaultTableModel m = (DefaultTableModel) tbInventory.getModel();
        m.setRowCount(0); // Clearing row list
        
        l.forEach(mat -> {
        
            Object[] a = new Object[5];
            a[0] = new IDHider(mat, mat.getName());
            a[1] = mat.getUnitaryPrice();
            a[2] = mat.getUnitsOfMeasure();
            a[3] = mat.getUnitsAvailable();
            a[4] = mat.getDescription();
            
            m.addRow(a);
            
        });
        
    }
    
    private void materialSelectionChanged()
    {
        
        int selectedIndex = tbInventory.getSelectedRow();
        if (selectedIndex == -1)
        {
            txtName.setText("");
            txtUnitsOfMeasure.setText("");
            sUnitsAvailable.setValue(0);
            taDescription.setText("");
            txtUnitaryPrice.setText("");
            
            return;
        }
            
        
        TableModel m = tbInventory.getModel();
        
        selectedMaterial = ((IDHider<Material>) m.getValueAt(selectedIndex, 0)).getHidden();
        
        txtName.setText(selectedMaterial.getName());
        txtUnitsOfMeasure.setText(selectedMaterial.getUnitsOfMeasure());
        sUnitsAvailable.setValue(selectedMaterial.getUnitsAvailable());
        taDescription.setText(selectedMaterial.getDescription());
        txtUnitaryPrice.setText(selectedMaterial.getUnitaryPrice().toString());
    }

    private boolean areAllFieldsValid()
    { 
        if(txtName.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Material name can't be empty.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(txtUnitaryPrice.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Unitary price can't be empty.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        double price=-1;
        try{
            price =Double.parseDouble(txtUnitaryPrice.getText());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Unitary price must be a number.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(price==0)
        {
            JOptionPane.showMessageDialog(this, "Unitary price can't be 0.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if(txtUnitsOfMeasure.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Units of measure can't be empty.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        if((int)sUnitsAvailable.getValue()==0)
        {
            JOptionPane.showMessageDialog(this, "Units avaible should be at least 1.",
                "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        } 
        
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewMaterial;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlEditAdd;
    private javax.swing.JSpinner sUnitsAvailable;
    private javax.swing.JTextArea taDescription;
    private javax.swing.JTable tbInventory;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUnitaryPrice;
    private javax.swing.JTextField txtUnitsOfMeasure;
    // End of variables declaration//GEN-END:variables
}
