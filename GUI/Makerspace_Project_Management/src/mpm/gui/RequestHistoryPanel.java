/*
 * Makerspace Project Management
 * Database Systems 2016-2017
 * Copyright 2016 (C) Grabocka Mikel, Nardini Matteo, Scolati Remo.
 * All rights reserved.
 */
package mpm.gui;

import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import mpm.data.dao.DAOs;
import mpm.data.entities.Message;
import mpm.data.entities.Purchase;
import mpm.data.entities.Request;
import mpm.main.MPM;

/**
 *
 * @author remo
 */
public class RequestHistoryPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestHistoryPanel
     */
    public RequestHistoryPanel() {
        initComponents();
        
        List<Request> reqList = DAOs.requests
                .findByProjectID(MPM.currentProject.getId());
        
        requestsTable = new javax.swing.JTable();
        requestsTable.setAutoCreateRowSorter(true);
                
        String[] requestColumnNames = {"Id",
            "Title",
            "Infrastructure",
            "Handled by"};
        
        reqModel = new DefaultTableModel(
                0, requestColumnNames.length);
        
        for(Request r : reqList){
            Object[] o = new Object[4];
            o[0] = r.getId();
            o[1] = r.getTitle();
            o[2] = DAOs.technical_infs.findByID(r.getTechInfId()).getName();
            o[3] = DAOs.users.findByID(r.getAssignedUserId()).getName();
                       
            reqModel.addRow(o);
        }
        
        requestsTable.setModel(reqModel);
        reqModel.setColumnIdentifiers(requestColumnNames);
        requestsScrollPane.setViewportView(requestsTable);
        requestsTable.setDefaultEditor(Object.class, null);
        
        requestsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                listSelectionChanged(e);}
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestsScrollPane = new javax.swing.JScrollPane();
        requestsTable = new javax.swing.JTable();
        messagesScrollPane = new javax.swing.JScrollPane();
        messagesTable = new javax.swing.JTable();
        requestLabel = new javax.swing.JLabel();
        messagesLabel = new javax.swing.JLabel();

        requestsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        requestsScrollPane.setViewportView(requestsTable);

        messagesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        messagesScrollPane.setViewportView(messagesTable);

        requestLabel.setText("Requests");

        messagesLabel.setText("Messages");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(requestsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(requestLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messagesLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messagesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestLabel)
                    .addComponent(messagesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(messagesScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                    .addComponent(requestsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listSelectionChanged(ListSelectionEvent e){
    
        int reqID = (Integer) reqModel.getValueAt(requestsTable
                .getSelectedRow(), 0);

        List<Message> mesList = DAOs.messages.findByRequestID(reqID);

        messagesTable = new javax.swing.JTable();
        messagesTable.setAutoCreateRowSorter(true);

        String[] messageColumnNames = {"Message Content",
            "Author",
            "Time"};

        DefaultTableModel mesModel = new DefaultTableModel(0, 
                messageColumnNames.length);

        for(Message m : mesList){
            Object[] o = new Object[3];
            o[0] = m.getText();
            o[1] = DAOs.users.findByID(m.getAuthorId()).getName();
            o[2] = m.getCreationTime();

            mesModel.addRow(o);
        }

        messagesTable.setModel(mesModel);
        mesModel.setColumnIdentifiers(messageColumnNames);
        messagesScrollPane.setViewportView(messagesTable);
        messagesTable.setDefaultEditor(Object.class, null);
    }

    private DefaultTableModel reqModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel messagesLabel;
    private javax.swing.JScrollPane messagesScrollPane;
    private javax.swing.JTable messagesTable;
    private javax.swing.JLabel requestLabel;
    private javax.swing.JScrollPane requestsScrollPane;
    private javax.swing.JTable requestsTable;
    // End of variables declaration//GEN-END:variables
}
